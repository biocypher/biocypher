[tool.poetry]
name = "biocypher"
version = "0.7.0"
description = "A unifying framework for biomedical research knowledge graphs"
authors = [
    "Sebastian Lobentanzer <sebastian.lobentanzer@gmail.com>",
    "Denes Turei <turei.denes@gmail.com>"
]
license = "MIT"
packages = [
    { include = "biocypher" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
repository = "https://github.com/biocypher/biocypher"
readme = "README.md"

[project]
requires-python = ">=3.10"

[project.urls]
Homepage = "https://biocypher.org"
Documentation = "https://biocypher.org"
Repository = "https://github.com/biocypher/biocypher.git"
Issues = "https://github.com/biocypher/biocypher/issues"

[tool.poetry.dependencies]
python = "^3.10"
PyYAML = ">=5.0"
more_itertools = "*"
appdirs = "*"
treelib = "1.6.4"
rdflib = "^6.2.0"
networkx = "^3.0"
stringcase = "^1.2.0"
neo4j-utils = "0.0.7"
pandas = "^2.0.1"
pooch = "^1.7.0"
tqdm = "^4.65.0"

[tool.poetry.group.dev.dependencies]
sphinx = ">=5.0.0"
sphinx-design = "^0.3.0"
sphinx-rtd-theme = ">=1.0.0"
sphinx-last-updated-by-git = ">=0.3"
sphinx-autodoc-typehints = ">=1.18.0"
myst-parser = "^0.18.0"
pytest = ">=6.0"
pre-commit = ">=2.17.0"
bump2version = "*"
coverage = ">=6.0"
pytest-cov = "^3.0.0"
hypothesis = "^6.50.1"
ipython = "^8.7.0"
ipykernel = "^6.23.1"
sphinxext-opengraph = "^0.8.2"
coverage-badge = "^1.1.0"
nbsphinx = "^0.9.2"
ruff = "^0.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/biocypher/biocypher/issues"

[tool.pytest.ini_options]
log_cli = true
log_level = "INFO"
markers = [
  "requires_neo4j: Requires connection to a Neo4j server",
  "requires_postgresql: Requires connection to a PostgreSQL server",
  "inject_driver_args(driver_args): Arguments for the Driver",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
# Exclude directories similar to your black configuration
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 80

[tool.ruff.lint.per-file-ignores]
"test/*" = ["ANN001", "ANN201", "D100", "D101", "D102", "D103", "D104", "I001", "S101"]

[tool.ruff.lint.isort]
known-first-party = ["numpy", "pandas"]
combine-as-imports = true
lines-between-types = 1
force-wrap-aliases = true
split-on-trailing-comma = true
